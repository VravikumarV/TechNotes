

Spring Cloud Stream: is a framework for building highly scalable event-driven microservices connected with shared messaging systems.

The framework provides flexible programming model built on already established and familiar Spring idioms and best practices, including support for persistent pub/sub semantics, consumer groups, and stateful partitions.


Spring Cloud Stream supports a variety of binder implementations:
    RabbitMQ
    Apache Kafka
    Kafka Streams
    Amazon Kinesis
    Google PubSub (partner maintained)
    Solace PubSub+ (partner maintained)
    Azure Event Hubs (partner maintained)
    
Building blocks:

   Destination Binders: Components responsible to provide integration with the external messaging systems.
   Destination Bindings: Bridge between the external messaging systems and application provided Producers and Consumers of messages (created by the Destination Binders).
   Message: The canonical data structure used by producers and consumers to communicate with Destination Binders (and thus other applications via external messaging systems).
   


@EnableBinding

@Input  [SubscribableChannel]
@Output [MessageChannel]

Note: @Input & @Output will ve defined on an Interface with methods defined for streaming. Spring will create a Proxy based implementation for the interface.


